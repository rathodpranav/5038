{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "f91306e5-5930-4569-8933-5677dadd13ba",
   "metadata": {},
   "source": [
    "# Assignment 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "81f09de8-f939-49e0-b7dc-b0b8306c2caf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Student info:\n",
      "Name: ravi, Age:17, Grade: A\n"
     ]
    }
   ],
   "source": [
    "student = (\"ravi\", 17, \"A\")\n",
    "print(\"Student info:\")\n",
    "print(f\"Name: {student[0]}, Age:{student[1]}, Grade: {student[2]}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "bf194ed7-8283-461f-b70c-6159104c4c1a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Grocery prices: (25, 50, 20)\n",
      "total: 95\n"
     ]
    }
   ],
   "source": [
    "prices = (25, 50, 20)\n",
    "total = sum(prices)\n",
    "print(\"Grocery prices:\", prices)\n",
    "print(\"total:\", total)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "ba8a5eee-b33d-425d-b225-51a70ba96b13",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Item: Milk, Price:25\n",
      "Item: Eggs, Price:50\n",
      "Item: Bread, Price:20\n"
     ]
    }
   ],
   "source": [
    "items = ((\"Milk\", 25), (\"Eggs\", 50),(\"Bread\",20))\n",
    "for item in items:\n",
    "    print(f\"Item: {item[0]}, Price:{item[1]}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "551e3849-14a2-4033-8ec2-767df540cf3b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train: Rajdhani, Time:10:00\n",
      "Train: Shatabdi, Time:12:30\n",
      "Train: Duronto, Time:17:00\n"
     ]
    }
   ],
   "source": [
    "trains = ((\"Rajdhani\", \"10:00\"), (\"Shatabdi\", \"12:30\"), (\"Duronto\", \"17:00\"))\n",
    "for train in trains:\n",
    "    print(f\"Train: {train[0]}, Time:{train[1]}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "bf9703fd-8c24-4ee3-80e7-d4e23d887201",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Name: Raj, Salary:30000\n",
      "Name: john, Salary:40000\n",
      "Name: Alice, Salary:55000\n"
     ]
    }
   ],
   "source": [
    "employees = [(\"john\", 40000), (\"Alice\", 55000), (\"Raj\", 30000)]\n",
    "sorted_employees = sorted(employees, key = lambda x: x[1])\n",
    "for emp in sorted_employees:\n",
    "    print(f\"Name: {emp[0]}, Salary:{emp[1]}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "ee554dd6-d47f-4dab-8eb0-942e8ecb1290",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Students scoring above 75: 3\n"
     ]
    }
   ],
   "source": [
    "marks = (67, 88, 92, 74, 76, 55)\n",
    "count = sum(1 for m in marks if m > 75)\n",
    "print(\"Students scoring above 75:\", count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "cf4887c4-e8b6-463b-8e99-dc165389e5dc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Maximum stock price: 170.1\n"
     ]
    }
   ],
   "source": [
    "prices = (154.5, 160.2, 149.8, 170.1)\n",
    "print(\"Maximum stock price:\", max(prices))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "f13cad15-dfb9-4ebe-9a27-cdc42be6a0a4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Average temperature: 30.419999999999998\n"
     ]
    }
   ],
   "source": [
    "temperatures = (29.5, 30.0, 32.2, 31.5, 28.9)\n",
    "average = sum(temperatures)/len(temperatures)\n",
    "print(\"Average temperature:\", average)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "deaa264e-4bdd-4c50-b412-0e22361a733a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Appointment: Doctor at 10:00 AM\n",
      "Appointment: Meeting at 2:00 PM\n"
     ]
    }
   ],
   "source": [
    "appointments = ((\"Doctor\", \"10:00 AM\"), (\"Meeting\", \"2:00 PM\"))\n",
    "for appt in appointments:\n",
    "    print(f\"Appointment: {appt[0]} at {appt[1]}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "b7e76a53-b9ff-48ab-aea5-c9321cb79d91",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Nmae: Samrat, Phone: 9876545670\n",
      "Nmae: Srishti, Phone: 9129346780\n"
     ]
    }
   ],
   "source": [
    "contacts = ((\"Samrat\", \"9876545670\"), (\"Srishti\", \"9129346780\"))\n",
    "for contact in contacts:\n",
    "    print(f\"Nmae: {contact[0]}, Phone: {contact[1]}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "a1735bcb-63d6-4e27-af15-7605d27cd8c6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Subject: Math, Time: 9:00 AM\n",
      "Subject: Science, Time: 11:30 AM\n",
      "Subject: English, Time: 2:00 PM\n"
     ]
    }
   ],
   "source": [
    "exams = ((\"Math\", \"9:00 AM\"), (\"Science\", \"11:30 AM\"), (\"English\", \"2:00 PM\"))\n",
    "for exam in exams:\n",
    "    print(f\"Subject: {exam[0]}, Time: {exam[1]}\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
